class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n = mat.size(), m = mat[0].size();
        
        queue<pair<int, int>> q;
        vector<vector<int>> ans(n, vector<int>(m, -1));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (mat[i][j] == 0) {
                    q.push({i, j});
                    ans[i][j] = 0;
                }
            }
        }
        
        vector<pair<int, int>> d{{-1, 0}, {0, 1}, {1, 0}, {0, -1}};
        while(!q.empty()) {
            int row = q.front().first;
            int col = q.front().second;
            q.pop();

            for (int i = 0; i < 4; i++) {
                int nrow = row + d[i].first;
                int ncol = col + d[i].second;

                if (nrow >= 0 && ncol >= 0 && nrow < n && ncol < m && ans[nrow][ncol] == -1) {
                    ans[nrow][ncol] = ans[row][col] + 1;
                    q.push({nrow, ncol});
                }
            }
        }
        return ans;
    }
};
