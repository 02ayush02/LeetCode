class Solution {
public:
    bool func(string& s, int index, int size, int cnt, vector<vector<int>>& dp) {
        if (cnt < 0) return false;
        if (index == size) {
            return cnt == 0;
        }

        if (dp[index][cnt] != -1) return dp[index][cnt];

        if (s[index] == ')') {
            return dp[index][cnt] = func(s, index + 1, size, cnt - 1, dp);
        } else if (s[index] == '(') {
            return dp[index][cnt] = func(s, index + 1, size, cnt + 1, dp);
        } else {
            return dp[index][cnt] = func(s, index + 1, size, cnt + 1, dp) | 
                   func(s, index + 1, size, cnt - 1, dp) |
                   func(s, index + 1, size, cnt, dp);
        }
    }



    bool checkValidString(string s) {
        if (s[0] == ')') return false;
        int n = s.size();
        // vector<vector<int>> dp(n, vector<int>(n, -1));
        // return func(s, 0, n, 0, dp);


        // Optimal Approach
        int mini = 0, maxi = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == '(') {
                mini += 1;
                maxi += 1;
            } else if (s[i] == ')') {
                mini -= 1;
                if (mini < 0) mini = 0;
                maxi -= 1;
            } else {
                mini -= 1;
                if (mini < 0) mini = 0;
                maxi += 1;
            }
            if (maxi < 0) return false;
            if (mini < 0) return false;
        }

        return (mini == 0);
    } 
};
