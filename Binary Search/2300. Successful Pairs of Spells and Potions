class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        vector<int>ans;
        
        sort(potions.begin(), potions.end());
        int n = potions.size();

        for (auto it : spells) {
            long long curr = it;
            int low = 0, high = n - 1;
            while(low <= high) {
                int mid = high + (low - high) / 2;
                if (curr * (long long)potions[mid] >= success) {
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            }
            ans.push_back(n - high - 1);
        }
        return ans;
    }
};
