class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int n = board.size(), m = board[0].size();

        vector<vector<int>>df{{-1, 0}, {-1, 1}, {0, 1}, {1, 1}, {1, 0}, {1,-1},{0,-1},{-1,-1}};
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int cnt = 0;
                for (auto it : df) {
                    int nrow = i + it[0];
                    int ncol = j + it[1];
                    if(nrow >=0 && ncol >= 0 && nrow<n && ncol < m && 
                    ((board[nrow][ncol] == 1) || (board[nrow][ncol] == -2))) {
                        cnt++;
                    }
                }
                if (board[i][j] == 0 && cnt == 3) {
                    board[i][j] = -3;  // make it alive but don't cnt
                } else if ((cnt < 2 || cnt > 3) && board[i][j] == 1) {
                    board[i][j] = -2; // make it dead but cnt
                } else if (cnt == 3 && board[i][j] == 0) {
                    board[i][j] = -1; // make it alive
                }
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == -2) board[i][j] = 0;
                if (board[i][j] == -1 || board[i][j] == -3) board[i][j] = 1;
            }
        }
    }
};
